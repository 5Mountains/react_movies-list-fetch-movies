{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/FindMovie/FindMovie.js","data/api.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","FindMovie","onSearchField","toFindMovie","addMovie","query","isError","newMovie","htmlFor","type","id","placeholder","classNames","value","onChange","e","onClick","defaultProps","request","a","fetch","response","data","json","Error","getMovie","App","state","setState","target","undefined","Title","Plot","Poster","imdbID","find","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a4e007d4.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\nimport PropTypes from 'prop-types';\n\nexport const MovieCard = ({\n  title,\n  description,\n  imgUrl,\n  imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({\n  movies = [],\n}) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      imdbId: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\nexport const FindMovie = ({\n  onSearchField,\n  toFindMovie,\n  addMovie,\n  query,\n  isError,\n  newMovie,\n}) => (\n  <>\n    <form className=\"find-movie\">\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"movie-title\">\n          Movie title\n        </label>\n\n        <div className=\"control\">\n          <input\n            type=\"text\"\n            id=\"movie-title\"\n            placeholder=\"Enter a title to search\"\n            className={classNames('input',\n              { 'is-danger': isError })}\n            value={query}\n            onChange={e => onSearchField(e)}\n          />\n        </div>\n\n        <p className={classNames('help',\n          { 'is-danger': isError },\n          { 'is-reveal': isError })}\n        >\n          Can&apos;t find a movie with such a title\n        </p>\n      </div>\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"button\"\n            className=\"button is-light\"\n            onClick={toFindMovie}\n          >\n            Find a movie\n          </button>\n        </div>\n\n        <div className=\"control\">\n          <button\n            type=\"button\"\n            className=\"button is-primary\"\n            onClick={addMovie}\n          >\n            Add to the list\n          </button>\n        </div>\n      </div>\n    </form>\n\n    {newMovie\n      && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard {...newMovie} />\n        </div>\n      )\n    }\n  </>\n);\n\nFindMovie.propTypes = {\n  onSearchField: PropTypes.func.isRequired,\n  toFindMovie: PropTypes.func.isRequired,\n  addMovie: PropTypes.func.isRequired,\n  query: PropTypes.string.isRequired,\n  isError: PropTypes.bool.isRequired,\n  newMovie: PropTypes.shape({}),\n};\n\nFindMovie.defaultProps = {\n  newMovie: null,\n};\n","const URL = 'http://www.omdbapi.com/?apikey=';\nconst KEY = 'edc9ca3c';\n\nconst request = async(title) => {\n  try {\n    const response = await fetch(`${URL}${KEY}${title}`);\n    const data = response.json();\n\n    return data;\n  } catch (error) {\n    throw new Error('Whoops!');\n  }\n};\n\nexport const getMovie = async(title) => {\n  const data = await request(`&t=${title}`);\n\n  return data;\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { getMovie } from './data/api';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n    newMovie: null,\n    isError: false,\n    query: '',\n  };\n\n  onSearchField = (e) => {\n    this.setState({\n      query: e.target.value,\n      isError: false,\n    });\n  }\n\n  toFindMovie = async() => {\n    const { query } = this.state;\n\n    const newMovie = await getMovie(query);\n\n    if (newMovie.Error !== undefined) {\n      this.setState({\n        isError: true,\n        query: '',\n      });\n\n      return;\n    }\n\n    this.setState({\n      isError: false,\n    });\n\n    const movie = {\n      title: newMovie.Title,\n      description: newMovie.Plot,\n      imgUrl: newMovie.Poster,\n      imdbUrl: `https://www.imdb.com/title/${newMovie.imdbID}`,\n      imdbId: newMovie.imdbID,\n    };\n\n    this.setState({\n      newMovie: movie,\n      query: '',\n    });\n  }\n\n  addMovie = () => {\n    const { movies, newMovie } = this.state;\n\n    if (!newMovie) {\n      this.setState({\n        isError: true,\n        query: '',\n      });\n\n      return;\n    }\n\n    const duplicate = movies.find(movie => movie.imdbId === newMovie.imdbId);\n\n    if (duplicate) {\n      this.setState({ newMovie: null });\n\n      return;\n    }\n\n    this.setState(state => ({\n      movies: [\n        ...state.movies,\n        newMovie,\n      ],\n      newMovie: null,\n    }));\n  }\n\n  render() {\n    const { movies, query, isError, newMovie } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie\n            onSearchField={this.onSearchField}\n            toFindMovie={this.toFindMovie}\n            addMovie={this.addMovie}\n            query={query}\n            isError={isError}\n            newMovie={newMovie}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}